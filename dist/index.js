#!/usr/bin/env node
(()=>{"use strict";var e={147:e=>{e.exports=require("fs")},521:e=>{e.exports=require("readline")}};var r={};function __nccwpck_require__(i){var t=r[i];if(t!==undefined){return t.exports}var n=r[i]={exports:{}};var s=true;try{e[i](n,n.exports,__nccwpck_require__);s=false}finally{if(s)delete r[i]}return n.exports}if(typeof __nccwpck_require__!=="undefined")__nccwpck_require__.ab=__dirname+"/";var i={};(()=>{var e=i;Object.defineProperty(e,"__esModule",{value:true});const r=__nccwpck_require__(147);const t=__nccwpck_require__(521);const parseLine=e=>{const[r,...i]=e.replaceAll('"',"").split(":");return[r.trim(),i.join(":").trim()]};(async()=>{const e=r.createReadStream("./yarn.lock","utf-8");const i=t.createInterface({input:e});let n=null;let s=null;for await(const e of i){if(e.startsWith("    ")){if(s){const[r,i]=parseLine(e);s.value[r]=i}}else if(e.startsWith("  ")){if(n&&s){n.value[s.name]=s.value;s=null}const[r,i]=parseLine(e);if(r==="resolution"){if(i.includes("@workspace:")){const[e,r]=i.split("@workspace:");if(r!=="."){n={dir:r,value:{name:e}}}}}else if(r==="dependencies"||r==="peerDependencies"||r==="peerDependenciesMeta"||r==="bin"){s={name:r,value:{}}}}else{if(n){if(!r.existsSync(n.dir)){r.mkdirSync(n.dir,{recursive:true})}const e=n.dir+"/package.json";if(!r.existsSync(e)){r.writeFileSync(e,JSON.stringify(n.value))}n=null}}}})()})();module.exports=i})();